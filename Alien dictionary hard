#include<iostream>

#include<vector>

#include<unordered_map>

#include<queue>

 

using namespace std;

 

string getAlienLanguage(vector<string> &dictionary, int K)

{

    unordered_map<char, vector<char>> graph;

    unordered_map<char, int> inDegree;

    for(int i = 0; i < K; i++){

        char c = 'a' + i;

        inDegree[c] = 0;

    }

 

    for(int i = 0; i < dictionary.size() - 1; i++){

        string  word1 = dictionary[i];

        string word2 = dictionary[i + 1];

        for(int j = 0; j < min(word1.size(), word2.size()); j++){

           if(word1[j] != word2[j]){

               graph [word1[j]].push_back(word2[j]);

               inDegree[word2[j]]++;

               break;

           }

        }

 

    }

 

    queue <char> q;

    for(auto &entry : inDegree){

        if(entry.second == 0){

            q.push(entry.first);

        }

    }

 

    string order;

    while(!q.empty()){

        char c = q.front();

        q.pop();

        order += c;

        for(char next : graph[c]){

            inDegree[next] --;

            if(inDegree[next] == 0){

                q.push(next);

            }

        }

    }

 

    if(order.size() == K){

        return order;

    }

    else{

        return " ";

    }

 

    return 0;

}

